apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  generation: 1
  name: spring-example
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: spring-example
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        vaultproject.io/policies: default,spring-example-policy
        vaultproject.io/ttl: 24h
      creationTimestamp: null
      labels:
        app: spring-example
    spec:
      containers:
        - env:
            - name: JAVA_OPTIONS
              value: -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit
            - name: VAULT_CACERT
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: VAULT_HOST
              valueFrom:
                configMapKeyRef:
                  key: vault.host
                  name: vault-config
            - name: VAULT_PORT
              value: "8200"
            - name: VAULT_TOKEN_FILE
              value: /var/run/secrets/vaultproject.io/secret.json
            - name: SPRING_CLOUD_VAULT_GENERIC_APPLICATION_NAME
              value: spring-example
          image: spring-example@sha256:819c5bbe3f5937ffbb4ab9dc622b97ce469ab9ea48a299e16c0c040129f5334a
          imagePullPolicy: Always
          name: spring-example
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/java.io/keystores
            - mountPath: /var/run/secrets/vaultproject.io
              name: vault-token
            - mountPath: /deployments/.env
              name: vault-token
              subPath: .env
            - mountPath: /deployments/config/application.properties
              name: vault-token
              subPath: application.properties
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - vault-init
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: VAULT_CACERT
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: VAULT_ADDR
              valueFrom:
                configMapKeyRef:
                  key: vault.addr
                  name: vault-config
            - name: VAULT_CONTROLLER_ADDR
              valueFrom:
                configMapKeyRef:
                  key: vault-controller.addr
                  name: vault-config
            - name: VAULT_CONTROLLER_CACERT
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: VAULT_INIT_PORT
              value: "8443"
            - name: LOG_LEVEL
              value: debug
            - name: VAULT_SKIP_VERIFY
              value: "true"
          image: docker.io/briangxchen/credscontroller:0.0.4
          imagePullPolicy: Always
          name: vault-init
          ports:
            - containerPort: 8443
              name: init-port
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/secrets/vaultproject.io
              name: vault-token
        - name: pem-to-truststore
          image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
          env:
            - name: ca_bundle
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: truststore_jks
              value: /var/run/secrets/java.io/keystores/truststore.jks
            - name: password
              value: changeit
          command: ['/bin/bash']
          args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/java.io/keystores
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir:
            medium: Memory
          name: vault-token
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - spring-example
        from:
          kind: ImageStreamTag
          name: spring-example:latest
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
